library(fglm)

generate <- function(X, b, d = 1, ymax = 10){
  eta <- X %*% b
  y <- rexp(n = nrow(X), rate = exp(X %*% b))
  y <- floor(y / d) * d
  pmin(y, ymax)
}

# Test
n <- 100
p <- 50
ymax <- 10
d <- 1
X <- cbind(1, matrix(runif(n *(p - 1), -0.5, 0.5), n, p - 1))
bstar <- c(-2, rep(0, p - 1))
pen = 1
y <- generate(X, bstar, d = d, ymax = ymax)
yupp <- y + d
yupp[y == ymax] <- Inf

out <- fglm::neg_ll_exp_cpp(y = y, X = X, b = bstar, yupp = yupp, order = 2, pen = pen)

max(abs(numDeriv::grad(function(x)fglm::neg_ll_exp_cpp(y = y, X = X, b = x,
                                                       yupp = yupp, order = 0, pen = pen)$value, bstar) -
  out$gradient))

max(abs(numDeriv::hessian(function(x)fglm::neg_ll_exp_cpp(y = y, X = X, b = x,
                                                          yupp = yupp, order = 0, pen = pen)$value, bstar) -
          out$hessian))

opt <- trust::trust(function(b)neg_ll_exp_cpp(y = y, X = X, b = b, yupp = yupp, order = 2, pen = pen),
                    parinit = bstar, rinit = 1, rmax = 10, fterm = 1e-10, mterm = 1e-10)
 
y_mid <- y + d/2

glm_fit <- glm(y_mid ~ 0 + X, family = Gamma(link = log))

sum(abs(-coef(glm_fit) - bstar))
sum(abs(bstar - opt$argument))


neg_ll_exp_cpp(y = y, X = X, b = -coef(glm_fit), yupp = yupp, order = 0, pen = pen)$value
neg_ll_exp_cpp(y = y, X = X, b = opt$argument, yupp = yupp, order = 0, pen = pen)$value


# Simulation without predictors and ymax
abs_err <- function(rate, n){
  rowMeans(replicate(1e4, {
    y <- floor(rexp(n, rate))
    abs(rate - c(
      log(1 + 1 / mean(y)),
      1 / mean(y + 0.5),
      1 / mean(y)
    ))
  }))
}
theta <- seq(0.1, 1, length.out = 10)
results <- sapply(theta, function(x)abs_err(x, n = 1000))
matplot(t(results), type = "l", x = theta, col = c(1, 2, 4), xlab  = expression(theta), ylab = "mean absolute error", lwd = 2,
        main = "Estimation with floor of exponential data")
legend("topleft", legend = c("correct likelihood", "exp. lik. at midpoint", "exp. lik."), col = c(1, 2, 4), lwd = 2, lty = 1:3)
